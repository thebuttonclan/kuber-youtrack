apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "..fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    helm.sh/chart: {{ include "..chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "..name" . }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "..name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "..name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      initContainers:
        - name: "init-{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - /bin/bash
            - /run.sh
          args:
            - configure
            - -J-Ddisable.configuration.wizard.on.clean.install=true
            - --listen-port=8443
            - --base-url=https://youtrack-dev.button.is:8443
            - --secure-mode=tls
            - --tls-server-cert-key-file=/opt/youtrack/certs/youtrack-dev.button.is.key
            - --tls-server-cert-file=/opt/youtrack/certs/youtrack-dev.button.is.cer
            - --tls-server-cert-chain-file=/opt/youtrack/certs/youtrack-dev.button.is.ca.cer
          volumeMounts:
            - name: "{{ include "..fullname" . }}-conf"
              mountPath: /opt/youtrack/conf
            - name: tls-certs
              mountPath: /opt/youtrack/certs
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "{{ include "..fullname" . }}-data"
              mountPath: /opt/youtrack/data
            - name: "{{ include "..fullname" . }}-conf"
              mountPath: /opt/youtrack/conf
            - name: "{{ include "..fullname" . }}-logs"
              mountPath: /opt/youtrack/logs
            - name: "{{ include "..fullname" . }}-backups"
              mountPath: /opt/youtrack/backups
            - name: tls-certs
              mountPath: /opt/youtrack/certs
      volumes:
        - name: tls-certs
          configMap:
            name: tls-certs
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: "{{ include "..fullname" . }}-data"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: "{{ include "..fullname" . }}-conf"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: "{{ include "..fullname" . }}-logs"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
    - metadata:
        name: "{{ include "..fullname" . }}-backups"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
